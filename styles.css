/* Base layout */
:root {
  color-scheme: light dark;
  --bg1: #0b1020;
  --bg2: #0f1630;
  --accent: #6ea4ff;
  --accent-2: #9f7fff;
  --glass: rgba(255, 255, 255, 0.06);
  --stroke: rgba(180, 190, 210, 0.50); /* semi-transparent grey for tile edges */
  /* Shared fixed column width for Back, Timer, Reset, Next */
  --control-col: 96px;
}
* { box-sizing: border-box; }
body {
  margin: 0;
  font: 16px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  display: grid;
  place-items: center;
  min-height: 100svh;
  background:
    radial-gradient(1200px 600px at 20% -10%, rgba(110, 164, 255, 0.18), transparent 60%),
    radial-gradient(1200px 600px at 110% 110%, rgba(159, 127, 255, 0.18), transparent 60%),
    linear-gradient(180deg, var(--bg1), var(--bg2));
}

.app {
  display: inline-block; /* shrink to content width */
  max-width: 96vw;       /* guard against overflow on small screens */
  padding: 20px;
  background: var(--glass);
  border: 1px solid rgba(255,255,255,0.08);
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.35), inset 0 0 0 1px rgba(255,255,255,0.04);
  backdrop-filter: blur(8px);
}

h1 {
  margin: 0 0 12px;
  font-weight: 700;
  letter-spacing: 0.2px;
  text-align: center;
  background: linear-gradient(90deg, #fff, #cfd8ff 40%, #a3b7ff);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

/* Titlebar: Back [title] Next */
.titlebar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  margin: 0 auto 12px;
  /* Match board/controls width */
  width: clamp(260px, 90vmin, 720px);
}
.titlebar h1 {
  flex: 1;
  margin: 0; /* override global h1 margin to align with buttons */
  text-align: center;
  /* Allow flex child to shrink and prevent horizontal overflow */
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.titlebar button {
  width: var(--control-col);
  min-width: var(--control-col);
}

.controls {
  display: flex;
  align-items: center;
  justify-content: space-between; /* timer left, toggles center, new game right */
  gap: 12px;
  margin: 0 auto 12px; /* center the row and add spacing below */
  flex-wrap: nowrap;
  /* Match board width for clean alignment with titlebar */
  width: clamp(260px, 90vmin, 720px);
}
.controls .toggles {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  flex: 1 1 auto; /* allow center block to expand */
}
.controls #timer {
  flex: 0 0 auto;
  width: var(--control-col);
  text-align: center;
}
.controls #resetBtn {
  flex: 0 0 auto;
  width: var(--control-col);
}

/* Timer */
.clock {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace;
  font-weight: 700;
  letter-spacing: 0.5px;
  color: #e8eeff;
  padding: 6px 10px;
  border-radius: 10px;
  background: linear-gradient(180deg, rgba(255,255,255,0.10), rgba(255,255,255,0.03));
  border: 1px solid rgba(255,255,255,0.14);
  box-shadow: 0 2px 10px rgba(0,0,0,0.25), inset 0 0 0 1px rgba(255,255,255,0.05);
  cursor: pointer; /* clickable to pause */
  user-select: none;
}

button {
  appearance: none;
  border: 1px solid rgba(255,255,255,0.14);
  background: linear-gradient(180deg, rgba(255,255,255,0.12), rgba(255,255,255,0.04));
  color: #eef2ff;
  padding: 8px 12px;
  border-radius: 10px;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.25), inset 0 0 0 1px rgba(255,255,255,0.05);
  transition: transform 120ms ease, filter 120ms ease, box-shadow 120ms ease;
}
button:hover { filter: brightness(1.08); box-shadow: 0 4px 14px rgba(0,0,0,0.35), inset 0 0 0 1px rgba(255,255,255,0.08); }
button:active { transform: translateY(1px); }
button:disabled {
  opacity: 0.55;
  cursor: not-allowed;
  filter: grayscale(0.2) brightness(0.95);
  box-shadow: 0 2px 8px rgba(0,0,0,0.18), inset 0 0 0 1px rgba(255,255,255,0.04);
}
button:disabled:hover,
button:disabled:active {
  filter: none;
  transform: none;
  box-shadow: 0 2px 8px rgba(0,0,0,0.18), inset 0 0 0 1px rgba(255,255,255,0.04);
}

.preview-toggle { display: inline-flex; align-items: center; gap: 6px; }
/* Inline status is visually hidden but still announced via aria-live */
.status {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Board */
.board {
  --n: 10; /* updated by JS if needed */
  position: relative;
  margin: 0 auto; /* center board inside the card */
  /* clamp to stay usable on tiny screens but not exceed desktop target */
  width: clamp(260px, 90vmin, 720px);
  aspect-ratio: 1 / 1; /* square board, image is scaled to fit */
  display: grid;
  grid-template-columns: repeat(var(--n), 1fr);
  gap: 0; /* rely on tile inner strokes instead of grout */
  background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.00));
  border-radius: 0; /* no rounding so corner tiles/edges are not clipped */
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0,0,0,0.45), 0 0 0 1px rgba(255,255,255,0.06) inset,
    0 0 0 1px rgba(110,164,255,0.12);
  /* Improve touch dragging UX */
  touch-action: pan-x pan-y;    /* allow native scroll until JS begins drag */
  user-select: none;            /* standard property */
  -webkit-user-select: none;    /* avoid text/image selection on iOS */
}

/* Subtle original-image guide overlay, toggled by .preview */
.board::after {
  content: "";
  position: absolute;
  inset: 0;
  /* background-image is set by .board.image-1::after / .board.image-2::after */
  background-size: 100% 100%;
  background-position: center;
  opacity: 0;
  transition: opacity 160ms ease;
  pointer-events: none;
  z-index: 2; /* ensure overlay sits above tiles */
}
.board.image-1::after { background-image: url("./sid1.png"); }
.board.image-2::after { background-image: url("./sid2.png"); }
.board.image-3::after { background-image: url("./catman.png"); }
.board.preview::after { opacity: 1; }

/* Tiles */
.tile {
  width: 100%;
  aspect-ratio: 1 / 1; /* square pieces */
  position: relative; /* for potential per-side helpers later */
  user-select: none;
  -webkit-user-drag: element; /* allow dragging the tile in WebKit */
  background-repeat: no-repeat;
  /* N x N sprite sheet mapping; --x and --y are 0..N-1 */
  background-size: calc(var(--n) * 100%) calc(var(--n) * 100%);
  background-position: calc(var(--x) * 100% / (var(--n) - 1)) calc(var(--y) * 100% / (var(--n) - 1));
  border-radius: 4px;
  background-color: transparent;
  /* Subtle edges rendered via child .frame so we can hide per-side joins */
}
.board.image-1 .tile { background-image: url("./sid1.png"); }
.board.image-2 .tile { background-image: url("./sid2.png"); }
.board.image-3 .tile { background-image: url("./catman.png"); }

/* Per-side subtle edges */
.tile > .frame {
  position: absolute;
  /* Inset by the border width to avoid being clipped by the board's rounded corners */
  inset: 0.5px;
  pointer-events: none;
  /* Keep visual corner radius consistent with the tile after insetting */
  border-radius: 3.5px;
  border: 0.5px solid var(--stroke);
}

/* Square the outer perimeter corners for fixed board edges */
.board .tile.pos-top {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.board .tile.pos-bottom {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.board .tile.pos-left {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.board .tile.pos-right {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
/* Match inner frame to the tile shape */
.board .tile.pos-top > .frame {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.board .tile.pos-bottom > .frame {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.board .tile.pos-left > .frame {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.board .tile.pos-right > .frame {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/* When two neighboring pieces correctly join, hide the shared border */
.tile.join-top > .frame { border-top-color: transparent; }
.tile.join-right > .frame { border-right-color: transparent; }
.tile.join-bottom > .frame { border-bottom-color: transparent; }
.tile.join-left > .frame { border-left-color: transparent; }

/* When a full 2x2 block is correct, flatten the inner corner radii */
.tile.sharp-tl { border-top-left-radius: 0; }
.tile.sharp-tr { border-top-right-radius: 0; }
.tile.sharp-br { border-bottom-right-radius: 0; }
.tile.sharp-bl { border-bottom-left-radius: 0; }
.tile.sharp-tl > .frame { border-top-left-radius: 0; }
.tile.sharp-tr > .frame { border-top-right-radius: 0; }
.tile.sharp-br > .frame { border-bottom-right-radius: 0; }
.tile.sharp-bl > .frame { border-bottom-left-radius: 0; }

/* Edge helper: draw a bright line only on the outer side(s) of edge pieces */
.board.edges .tile::before,
.board.edges .tile::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 3; /* above the full-image guide (z-index:2) */
  background: none; /* per-side rules below will set background gradients */
}

/* Top/Left sides on ::before */
.board.edges .tile.edge-top::before {
  background-image: linear-gradient(to bottom, #ff7a00 3px, transparent 0);
}
.board.edges .tile.edge-left::before {
  background-image: linear-gradient(to right, #ff7a00 3px, transparent 0);
}
/* If both top and left, draw both lines */
.board.edges .tile.edge-top.edge-left::before {
  background-image:
    linear-gradient(to bottom, #ff7a00 3px, transparent 0),
    linear-gradient(to right, #ff7a00 3px, transparent 0);
}

/* Right/Bottom sides on ::after */
.board.edges .tile.edge-right::after {
  background-image: linear-gradient(to left, #ff7a00 3px, transparent 0);
}
.board.edges .tile.edge-bottom::after {
  background-image: linear-gradient(to top, #ff7a00 3px, transparent 0);
}
/* If both right and bottom, draw both lines */
.board.edges .tile.edge-right.edge-bottom::after {
  background-image:
    linear-gradient(to left, #ff7a00 3px, transparent 0),
    linear-gradient(to top, #ff7a00 3px, transparent 0);
}

.tile[draggable="true"] { cursor: grab; }
.tile.dragging {
  opacity: 0.9;
  cursor: grabbing;
  /* Inset ring so all four sides are visible and not occluded by neighbors */
  box-shadow: 0 0 0 2px rgba(110, 164, 255, 0.7) inset;
}
.tile.over {
  /* Solid, slightly brighter inset ring for the drop target */
  box-shadow: 0 0 0 2px rgba(110, 164, 255, 0.9) inset;
}

/* Floating avatar that follows the finger during touch drag */
.drag-avatar {
  background-repeat: no-repeat;
  background-size: calc(var(--n) * 100%) calc(var(--n) * 100%);
  background-position: calc(var(--x) * 100% / (var(--n) - 1)) calc(var(--y) * 100% / (var(--n) - 1));
  border-radius: 4px;
  opacity: 0.95;
  box-shadow: 0 10px 24px rgba(0,0,0,0.45), 0 0 0 1px rgba(255,255,255,0.08) inset;
  will-change: transform;
}

/* Victory visuals: no grid overlay, glow on outer edge only */
.board.solved .tile { box-shadow: none; }
.board.solved .tile > .frame { border-color: transparent; }
/* Outer glow ring without affecting layout */
.board.solved::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  box-shadow:
    0 0 0 3px rgba(123, 226, 123, 0.9),
    0 0 24px 8px rgba(123, 226, 123, 0.45);
}
.board.solved { animation: solvedPulse 800ms ease-in-out 2; }
@keyframes solvedPulse {
  0% { box-shadow: 0 0 0 0 rgba(123, 226, 123, 0.45); }
  100% { box-shadow: 0 0 0 16px rgba(123, 226, 123, 0); }
}

/* Correct placement pulse */
.tile.correct-pulse,
.tile.correct-pulse-rm {
  position: relative; /* ensure z-index takes effect */
  z-index: 5;         /* above .board::after overlay (z-index:2) and sparkles (4) */
}
.tile.correct-pulse {
  animation: pulseCorrect 420ms ease-out;
  will-change: transform, box-shadow, filter;
  transform-origin: center center;
  filter: drop-shadow(0 6px 16px rgba(0,0,0,0.35));
}
@keyframes pulseCorrect {
  0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(123, 226, 123, 0); }
  40% { transform: scale(1.08); box-shadow: 0 0 0 3px rgba(123, 226, 123, 0.7); }
  100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(123, 226, 123, 0); }
}

/* Reduced-motion fallback: static green ring without animation */
.tile.correct-pulse-rm {
  box-shadow: 0 0 0 3px rgba(123, 226, 123, 0.7);
}

/* Sparkle particles for correct placement */
.board .sparkle {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: radial-gradient(circle, #caffca 0%, #7be27b 60%, rgba(123, 226, 123, 0.1) 100%);
  pointer-events: none;
  z-index: 4; /* above overlays/edges */
  opacity: 0;
  animation: sparkleFly 700ms ease-out forwards;
  will-change: transform, opacity;
}
@keyframes sparkleFly {
  0%   { transform: translate(0, 0) scale(0.8); opacity: 1; }
  100% { transform: translate(var(--dx), var(--dy)) scale(1.4); opacity: 0; }
}

/* Accessibility: respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .tile.correct-pulse { animation: none; }
  /* Keep static fallback visible */
  .tile.correct-pulse { box-shadow: 0 0 0 3px rgba(123, 226, 123, 0.7); }
  .board .sparkle { display: none !important; }
}

/* Modal overlay */
.modal {
  position: fixed;
  inset: 0;
  display: none; /* toggled by .show */
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.45);
  z-index: 999;
  padding: 16px;
  pointer-events: none; /* let clicks pass through so gameplay isn't blocked */
}
.modal.show { display: flex; }
.modal-content {
  background: linear-gradient(180deg, rgba(28,38,68,0.95), rgba(22,28,52,0.95));
  color: #e9ffea;
  border: 1px solid rgba(123, 226, 123, 0.6);
  box-shadow: 0 10px 30px rgba(0,0,0,0.5), inset 0 0 0 1px rgba(255,255,255,0.05);
  padding: 14px 18px;
  border-radius: 12px;
  max-width: min(92vw, 520px);
  text-align: center;
  font-weight: 700;
}

/* Responsive tweaks */
@media (max-width: 640px) {
  :root { --control-col: 72px; }
  .app { padding: 16px; }
  .titlebar { gap: 8px; }
  .titlebar button { padding: 6px 10px; font-size: 0.95rem; }
  button { padding: 6px 10px; }
  .controls { gap: 8px; flex-wrap: wrap; }
  .controls #timer { order: 1; }
  .controls .toggles { order: 2; flex: 0 0 100%; justify-content: center; flex-wrap: wrap; }
  .controls .toggles > label { flex: 1 1 100%; justify-content: center; text-align: center; }
  .controls #resetBtn { order: 3; }
  h1 { font-size: 1.25rem; }
}
@media (max-width: 380px) {
  :root { --control-col: 60px; }
  .app { padding: 12px; }
  .titlebar button { padding: 6px 8px; font-size: 0.85rem; }
  .titlebar { flex-wrap: wrap; }
  .titlebar h1 { flex-basis: 100%; order: 2; margin-top: 4px; }
  h1 { font-size: 1.1rem; }
}
